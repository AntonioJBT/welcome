Notes on how to create technical documents

reStructuredText may provide the best tool as an accessible, flexible, readable, plain text, python based technical documentation option. reST is the source format, Sphinx is a builder tool that transforms reStructuredText into different target output formats.

It can be integrated with Sphinx for converting to html, pdf, etc. and for supporting multiple languages (not just Python).

There are extensions for Mendeley and BibTex for citations. 
Mendeley refs to check:
Mendeley Python:
http://mendeley-python.readthedocs.io/en/stable/
http://emilien.tlapale.com/bibgen/doc/source/rest.html
https://github.com/etlapale/bibgen

See the Sphinx BibTeX extension:
http://build-me-the-docs-please.readthedocs.io/en/latest/Using_Sphinx/UsingBibTeXCitationsInSphinx.html
This is in beta though.
BibTeX is the file format for jabref, a citation manager:
http://www.bibtex.org/
http://www.jabref.org/

The subdocument and include directives in reStructuredText can include external files.
http://docutils.sourceforge.net/sandbox/package-doc/multiple-input-files.html#id6
http://reinout.vanrees.org/weblog/2010/12/08/include-external-in-sphinx.html

reStructuredText is similar to Markdown. If webpages are the main objective maybe use Markdown though. 
For technical documents maybe reStructuredText is better. 

reStructuredText seems much easier than html and LaTex and travels much better as it is .txt and can be used as the source for later conversion.

With python+docutils+sphinx it can be formatted to html, with pdflatex to pdf for example.

reStructuredText can be transfomed to Markdown with Pandoc and then rendered as html.

Images can be pulled in with e.g.:

.. image:: /path/to/image.jpg

reStructuredText has poor support for math?

##################################
Some references and blogs:

http://www.sphinx-doc.org/en/1.5.1/tutorial.html
First Steps with Sphinx — Sphinx 1.5.1 documentation

reStructuredText Primer
http://www.sphinx-doc.org/en/1.5.1/rest.html#

rst-cheatsheet.rst
https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst

http://docutils.sourceforge.net/docs/user/rst/quickref.html#hyperlink-targets

DocOnce may also be an option, looks nice:
http://hplgit.github.io/doconce/doc/pub/slides/scientific_writing-1.html
http://hplgit.github.io/doconce/doc/web/index.html
http://hplgit.github.io/teamods/writing_reports/

Blogs with comparisons:
https://opensource.com/life/15/8/markup-lowdown
http://hyperpolyglot.org/lightweight-markup

http://zverovich.net/2016/06/16/rst-vs-markdown.html
reStructuredText vs Markdown for documentation

https://www.pydanny.com/markup-language-faceoff-lists.html
Markup Language Faceoff: Lists

https://varnish-cache.org/docs/2.1/phk/sphinx.html
Why Sphinx and reStructuredText ? — Varnish version 2.1.5 documentation

http://build-me-the-docs-please.readthedocs.io/en/latest/Using_Sphinx/UsingBibTeXCitationsInSphinx.html
Managing bibliographic citations in Sphinx — Wiser 0.1 documentation

https://en.wikipedia.org/wiki/ReStructuredText
reStructuredText - Wikipedia

https://www.mendeley.com/reference-management/reference-manager
Reference Manager | Mendeley

https://en.wikipedia.org/wiki/Comparison_of_document_markup_languages

Writing Scientific Papers Using Markdown
https://danieljhocking.wordpress.com/2014/12/09/writing-scientific-papers-using-markdown/

How To Write Papers with Restructured Text 
http://acooke.org/cute/HowToWrite1.html

Standard format conversions between reST and LaTeX:
http://goer.org/Journal/2011/01/publishing_with_sphinx_rest_and_sffms_latex.html
